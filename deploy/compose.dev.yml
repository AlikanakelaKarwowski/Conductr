version: "3.9"
services:
  redis:
    image: redis:7
    ports: ["6379:6379"]

  postgres:
    image: postgres:16
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: symphony
    ports: ["5432:5432"]

  # lavalink:
  #   image: ghcr.io/lavalink-devs/lavalink:4
  #   environment:
  #     SERVER_PORT: 2333
  #     LAVALINK_SERVER_PASSWORD: ${LAVALINK_PASSWORD}
  #   volumes:
  #     - ../lavalink/application.yml:/opt/Lavalink/application.yml:ro
  #   ports: ["2333:2333"]

  gateway:
    build:
      context: ..
      dockerfile: docker/Dockerfile.gateway
    env_file: ["../.env"]
    depends_on: [redis]
    # one container can run N shards for dev:
    environment:
      SHARD_RANGE: "0-1" # simple range string you parse in code

  interactions:
    build:
      context: ..
      dockerfile: docker/Dockerfile.interactions
    env_file: ["../.env"]
    command:
      [
        "uvicorn",
        "interactions.main:app",
        "--host",
        "0.0.0.0",
        "--port",
        "8080",
      ]
    ports: ["8080:8080"]
    depends_on: [redis]

  web:
    build:
      context: ..
      dockerfile: docker/Dockerfile.web
    env_file: ["../.env"]
    command: ["uvicorn", "web.main:app", "--host", "0.0.0.0", "--port", "8081"]
    ports: ["8081:8081"]
    depends_on: [postgres, redis, gateway]

  prometheus:
    image: prom/prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
    ports: ["9090:9090"]
    depends_on:
      - gateway
      - interactions
      - web

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports: ["3000:3000"]
    volumes:
      # mount dashboards into the exact path Grafana expects
      - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards:ro
      # mount datasources into the exact path Grafana expects
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources:ro
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: admin
      GF_USERS_ALLOW_SIGN_UP: false
    depends_on:
      - prometheus
